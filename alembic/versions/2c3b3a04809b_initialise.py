"""initialise

Revision ID: 2c3b3a04809b
Revises: 
Create Date: 2024-02-23 08:32:13.878057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '2c3b3a04809b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('infant',
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('nhi_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('infant_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('infant_id')
    )
    with op.batch_alter_table('infant', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_infant_nhi_number'), ['nhi_number'], unique=True)

    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_access_key'), ['access_key'], unique=True)

    op.create_table('consent',
    sa.Column('consent_giver_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('consent_giver_email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('collected_physically', sa.Boolean(), nullable=False),
    sa.Column('consent_id', sa.Integer(), nullable=False),
    sa.Column('infant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['infant_id'], ['infant.infant_id'], ),
    sa.PrimaryKeyConstraint('consent_id')
    )
    op.create_table('video',
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sha256sum', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('infant_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['infant_id'], ['infant.infant_id'], ),
    sa.PrimaryKeyConstraint('video_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('video')
    op.drop_table('consent')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_access_key'))

    op.drop_table('user')
    with op.batch_alter_table('infant', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_infant_nhi_number'))

    op.drop_table('infant')
    # ### end Alembic commands ###
